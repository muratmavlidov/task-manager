{"version":3,"sources":["ui/button/index.js","ui/button/button.js","components/header/index.js","components/header/header.js","components/task-list-item/index.js","components/task-list-item/task-list-item.js","components/task-list/index.js","components/task-list/task-list.js","components/add-popup/index.js","components/add-popup/add-popup.js","services/megapolis-service.js","components/spinner/index.js","components/spinner/spinner.js","pages/items-page/items-page.js","pages/items-page/index.js","pages/edit-page/edit-page.js","pages/edit-page/index.js","app/index.js","app/app.js","index.js"],"names":["Button","text","type","className","Header","showAddPopup","onClick","TaskListItem","id","title","deleteTask","goToEditPage","TaskList","taskList","map","key","AddPopup","state","fieldValue","errorMessage","changeField","target","setState","value","createNewTask","props","closePopup","createTask","this","show","overlayActive","errorActive","onInput","Component","_baseUrl","Api","axios","get","data","post","delete","Spinner","itemsPage","showSpinner","toggleAddPopup","then","response","newTaskItem","newTaskList","idx","findIndex","el","slice","getAllTask","history","listContent","push","withRouter","EditPage","changed","changeValue","editTask","itemId","btn","Link","to","defaultValue","App","path","exact","component","ItemsPage","render","match","params","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.17e83dfe.chunk.js","sourcesContent":["import Button from './button';\r\nexport default Button;","import React from 'react';\r\nimport './button.css';\r\n\r\nconst Button = ({ text, type }) => {\r\n  return(\r\n    <button className={`btn btn-${type}`}>\r\n      {text}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;","import Header from './header';\r\nexport default Header;","import React from 'react';\r\nimport './header.css'\r\nimport Button from '../../ui/button';\r\n\r\nconst Header = ({ showAddPopup }) => {\r\n  return(\r\n    <div className=\"header\">\r\n      <div className=\"header__title\">\r\n        <h1>Список задач</h1>\r\n      </div>\r\n      <div onClick={showAddPopup}>\r\n        <Button text=\"Добавить\" type=\"success\"/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import TaskListItem from './task-list-item';\r\nexport default TaskListItem;","import React from 'react';\r\nimport './task-list-item.css';\r\n\r\nconst TaskListItem = ({ id, title, deleteTask, goToEditPage }) => {\r\n  return (\r\n    <li className=\"task-list-item\">\r\n      <div className=\"task-list-item__id\">{ id }</div>\r\n      <div className=\"task-list-item__title\">{ title }</div>\r\n      <div className=\"task-list-item__icons\">\r\n        <i className=\"fa fa-pencil\" onClick={goToEditPage}></i>\r\n        <i className=\"fa fa-trash\" onClick={deleteTask}></i>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TaskListItem;","import TaskList from './task-list';\r\nexport default TaskList;","import React from 'react';\r\nimport './task-list.css'\r\nimport TaskListItem from '../task-list-item';\r\n\r\nconst TaskList = ({ taskList, deleteTask, goToEditPage }) => (\r\n  <ul className=\"task-list\">\r\n    {\r\n      taskList.map(({id, title}) => {\r\n        return(\r\n          <TaskListItem key={id} id={id} title={title}\r\n                        deleteTask={() => deleteTask(id)}\r\n                        goToEditPage={() => goToEditPage(id)} />\r\n        );\r\n      })\r\n    }\r\n  </ul>\r\n);\r\n\r\nexport default TaskList;","import AddPopup from './add-popup';\r\nexport default AddPopup;","import React, { Component } from 'react';\r\nimport './add-popup.css';\r\nimport Button from '../../ui/button';\r\n\r\nclass AddPopup extends Component {\r\n\r\n  state = {\r\n    fieldValue: '',\r\n    errorMessage: false\r\n  }\r\n\r\n  changeField = ({ target }) => {\r\n    this.setState({\r\n      fieldValue: target.value,\r\n      errorMessage: false\r\n    })\r\n  }\r\n\r\n  createNewTask = () => {\r\n    if (this.state.fieldValue === '') {\r\n      this.setState({ errorMessage: true });\r\n      return;\r\n    }\r\n    this.props.closePopup();\r\n    this.props.createTask(this.state.fieldValue);\r\n  }\r\n\r\n  render() {\r\n    const { show, closePopup } = this.props;\r\n    const { errorMessage } = this.state;\r\n    const overlayActive = show ? 'overlay--active' : '';\r\n    const errorActive = errorMessage ? 'add-popup__formError--active' : '';\r\n    \r\n    return(\r\n      <div className={`overlay ${overlayActive}`}>\r\n        <div className=\"add-popup\">\r\n          <div className=\"form\">\r\n              <label className=\"form-label\">\r\n                Краткое описание\r\n              </label> \r\n              <input className=\"form-field\"\r\n                     onInput={this.changeField} />\r\n              <span className={`add-popup__formError ${errorActive}`}>\r\n                Заголовок не может быть пустым \r\n              </span>\r\n          </div>\r\n          <div className=\"add-popup__btn\" onClick={this.createNewTask}>\r\n            <Button text=\"Создать\" type=\"success\" />\r\n          </div>\r\n          <div className=\"add-popup__close\" onClick={closePopup}>\r\n            &times;\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddPopup;","import axios from 'axios';\r\n\r\nconst _baseUrl = 'https://test.megapolis-it.ru/api/list';\r\n\r\nexport default class Api {\r\n  //\r\n  //  get task list\r\n  //\r\n  static getAllTask() {\r\n    return axios.get(_baseUrl);\r\n  }\r\n\r\n  //\r\n  //  create a new task\r\n  //\r\n  static createTask(data) {\r\n    return axios.post(_baseUrl, { title: data });\r\n  }\r\n\r\n  //\r\n  //  editing task by id\r\n  //\r\n  static editTask({ id, title }) {\r\n    return axios.post(`${_baseUrl}/${id}`, { title: title });\r\n  }\r\n\r\n  //\r\n  //  remove task by id\r\n  //\r\n  static deleteTask(id) {\r\n    return axios.delete(`${_baseUrl}/${id}`);\r\n  }\r\n  \r\n}","import Spinner from './spinner';\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"lds-css\">\r\n      <div className=\"lds-double-ring\">\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport Header from '../../components/header';\r\nimport TaskList from '../../components/task-list';\r\nimport AddPopup from '../../components/add-popup';\r\nimport Api from '../../services/megapolis-service';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Spinner from '../../components/spinner';\r\n\r\nimport './items-page.css';\r\n\r\nclass itemsPage extends Component {\r\n\r\n  state = {\r\n    showAddPopup: false,\r\n    taskList: [],\r\n    showSpinner: true\r\n  }\r\n\r\n  componentDidMount() {\r\n    Api.getAllTask().then(response => {\r\n      this.setState({\r\n        taskList: response.data.data,\r\n        showSpinner: false\r\n      });\r\n    });\r\n  }\r\n\r\n  toggleAddPopup = () => {\r\n    this.setState(({showAddPopup}) => {\r\n      return { showAddPopup: !showAddPopup }\r\n    });\r\n  }\r\n\r\n  createTask = (value) => {\r\n    Api.createTask(value).then(response => {\r\n      const { id } = response.data;\r\n      const newTaskItem = { id, title: value };\r\n      const newTaskList = [...this.state.taskList, newTaskItem ];\r\n\r\n      this.setState({\r\n        taskList: newTaskList\r\n      });\r\n    });\r\n  }\r\n\r\n  deleteTask = (id) => {\r\n    Api.deleteTask(id).then(() => {\r\n      this.setState(({taskList}) => {\r\n        const idx = taskList.findIndex((el) => el.id === id);\r\n        const newTaskList = [\r\n          ...taskList.slice(0, idx),\r\n          ...taskList.slice(idx + 1),\r\n        ];\r\n\r\n        return {\r\n          taskList: newTaskList\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { showAddPopup, taskList, showSpinner } = this.state;\r\n    const { history } = this.props;\r\n    const listContent = showSpinner\r\n          ? <div className=\"items-page__spinner\"><Spinner /></div>\r\n          : <TaskList taskList={taskList}\r\n              deleteTask={this.deleteTask}\r\n              goToEditPage={(id) => {\r\n                history.push(`/items/${id}`)\r\n            }} />\r\n\r\n    return(\r\n      <div>\r\n        <Header showAddPopup={this.toggleAddPopup} />\r\n        { listContent }\r\n        <AddPopup show={showAddPopup}\r\n                  closePopup={this.toggleAddPopup}\r\n                  createTask={this.createTask} />\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(itemsPage);","import itemsPage from './items-page';\r\nexport default itemsPage;","import React, { Component } from 'react';\r\nimport Api from '../../services/megapolis-service';\r\nimport Button from '../../ui/button';\r\nimport './edit-page.css';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nclass EditPage extends Component {\r\n\r\n  state = {\r\n    id: null,\r\n    title: '',\r\n    fieldValue: '',\r\n    changed: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = this.props.itemId;\r\n\r\n    Api.getAllTask().then(response => {\r\n      const taskList = response.data.data;\r\n      const idx = taskList.findIndex((el) => el.id == id);\r\n\r\n      this.setState({\r\n        id: taskList[idx].id,\r\n        title: taskList[idx].title\r\n      });\r\n    });\r\n  }\r\n\r\n  changeValue = ({ target }) => {\r\n    this.setState({\r\n      changed: this.state.title !== target.value,\r\n      fieldValue: target.value\r\n    });\r\n  }\r\n\r\n  editTask = () => {\r\n    const { id, fieldValue } = this.state;\r\n    Api.editTask({ id, title: fieldValue }).then(() => {\r\n      this.props.history.push(`/items`)\r\n    });\r\n  }\r\n\r\n  deleteTask = () => {\r\n    Api.deleteTask(this.state.id).then(() => {\r\n      this.props.history.push(`/items`)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {id, title, changed} = this.state;\r\n    const btn = changed \r\n          ? <div onClick={this.editTask} Link>\r\n              <Button text=\"Сохранить\" type=\"info\" /> \r\n            </div>\r\n            \r\n          : <Link to='/items' >\r\n              <Button text=\"Вернуться в список\" type=\"info\" />\r\n            </Link> \r\n\r\n    return (\r\n      <div className=\"edit-page\">\r\n        <div className=\"edit-page__header\">\r\n          <h1>Задача №{id}</h1>\r\n          <div className=\"edit-page__del\" onClick={this.deleteTask}>\r\n            <Button text=\"Удалить\" type=\"danger\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"form\">\r\n          <label className=\"form-label\">\r\n            Краткое описание\r\n          </label>\r\n          <input className=\"form-field\" defaultValue={ title }\r\n                 onInput={this.changeValue} />\r\n        </div>\r\n        { btn }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(EditPage);","import EditPage from './edit-page';\r\nexport default EditPage;","import App from './app';\r\nexport default App;","import React, { Component } from 'react';\r\nimport ItemsPage from '../pages/items-page';\r\nimport EditPage from '../pages/edit-page';\r\nimport './app.css';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"app\">\r\n        <Router>\r\n          <Route path=\"/items\" exact component={ItemsPage} />\r\n          \r\n          <Route path=\"/items/:id\"\r\n                 render={({match}) => {\r\n                   const { id } = match.params;\r\n                   return <EditPage itemId={id} />\r\n                 }} />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import App from './app';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}